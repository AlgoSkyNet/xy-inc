<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd"
	default-autowire="byName">

	<context:property-placeholder location="#{propsLocation}" ignore-unresolvable="true" />

	<!-- bean post-processor for JPA annotations -->
	<context:annotation-config />
	<context:component-scan base-package="com.xyinc.service.impl" />

	<tx:annotation-driven transaction-manager="xyincTM" />
	<bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

	<!-- Creates an Database -->
	<bean id="xyincDS" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${database.driver}" />
		<property name="url" value="${database.url}" />
		<property name="username" value="${database.user}" />
		<property name="password" value="${database.pass}" />
	</bean>

	<!-- Drives transactions using local JPA APIs -->
	<bean id="xyincTM" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="xyincEMF" />
	</bean>

	<bean id="xyincEMF" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceXmlLocation" value="classpath:META-INF/persistence.xml" />
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.default_schema">${hibernate.default_schema}</prop>
				<prop key="hibernate.default_batch_fetch_size">4</prop>

				<prop key="hibernate.cache.provider_class">net.sf.ehcache.hibernate.EhCacheProvider</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.archive.autodetection">class</prop>
				<prop key="hibernate.query.substitutions">true</prop>

				<!-- configuration pool via c3p0 -->
				<prop key="c3p0.acquire_increment">1</prop>
				<prop key="c3p0.idle_test_period">100</prop> <!-- seconds -->
				<prop key="c3p0.max_size">100</prop>
				<prop key="c3p0.max_statements">0</prop>
				<prop key="c3p0.min_size">10</prop>
				<prop key="c3p0.timeout">100</prop> <!-- seconds -->
				
			</props>
		</property>
		
		<property name="dataSource" ref="xyincDS" />
		
		<property name="loadTimeWeaver">
			<bean class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver" />
		</property>
		
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</property>
	</bean>
</beans>